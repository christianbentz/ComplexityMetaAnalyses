# remove the parentheses in column names
colnames(gutierrez.results) <- sub("\\(", "", colnames(gutierrez.results))
colnames(gutierrez.results) <- sub("\\)", "", colnames(gutierrez.results))
# replace "+" by "."
colnames(gutierrez.results) <- gsub("\\+", ".", colnames(gutierrez.results))
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
#TRACK B (Universal Dependencies, UD)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
track.a.rows <- c(nrow(gutierrez.results), nrow(oh.results))
print(track.a.rows) # this corresponds to the number of languages
track.a.cols <- c(ncol(gutierrez.results), ncol(oh.results))
print(track.a.cols) # this is the number of measures per team
#Track B (should be 63 rows)
track.b.rows <- c(nrow(brunato.results), nrow(coltekin.results), nrow(semenuks.results), nrow(sinnemaki.results), nrow(sozinova.results))
print(track.b.rows) # this corresponds to the number of languages
track.b.cols <- c(ncol(brunato.results), ncol(coltekin.results), ncol(semenuks.results), ncol(sinnemaki.results), ncol(sozinova.results))
print(track.b.cols) # this is the number of measures per team
track.a <- cbind(gutierrez.results, oh.results[, 3:ncol(oh.results)])
track.b <- cbind(brunato.results, coltekin.results[, 3:ncol(coltekin.results)],
semenuks.results[, 3:ncol(semenuks.results)],
sinnemaki.results[, 3:ncol(sinnemaki.results)],
sozinova.results[, 3:ncol(sozinova.results)])
head(track.b)
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
track.b.short <- track.b[, 3:ncol(track.b)]
track.b.plot <- ggpairs(track.b.short, progress = TRUE,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = list(continuous = wrap('cor', method = "spearman")),
columns = c("BV_n_tokens", "BV_char_per_tok", "BV_avg_links_len",
"BV_avg_max_depth", "CR_inflection_accuracy", "CR_ttr",
"S_idMean", "S_idSD", "SI_dm", "SI_hm", "SI_dep_dl",
"SBS_INF", "SBS_DER")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.b.plot)
head(track.a.short)
install.packages("picante")
library(picante)
cor.table(track.a.short, cor.method="pearson")
?cor.table()
cor.table(track.a.short, cor.method="spearman")
head(track.a.short)
track.a
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
print(track.a.plot)
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
?rcorr()
track.a.matrix <- as.matrix(track.a.short)
#apply the rcorr function to this matrix to get matrices of Spearman correlations and uncorrected p-values
track.a.cor <- rcorr(track.a.matrix, type = "spearman")$r
track.a.pvalues <- rcorr(track.a.matrix, type = "spearman")$P
track.a.n <- rcorr(track.a.matrix, type = "spearman")$n
#convert these matrices to a data frame again
track.a.df <- data.frame(row = rownames(track.a.pvalues)[row(track.a.pvalues)[upper.tri(track.a.pvalues)]],
col = colnames(track.a.pvalues)[col(track.a.pvalues)[upper.tri(track.a.pvalues)]],
pvalue = track.a.pvalues[upper.tri(track.a.pvalues)],
corr = track.a.cor[upper.tri(track.a.cor)],
num = track.a.n[upper.tri(track.a.n)])
head(track.a.df)
head(track.a.short)
cor(track.a.short)
?cor()
cor(track.a.short, use = "pairwise.complete.obs")
cor(track.a.short, method = "spearman", use = "pairwise.complete.obs")
cor.results <- cor(track.a.short, method = "spearman", use = "pairwise.complete.obs")
head(cor.results)
cor.test(track.a.short, method = "spearman", use = "pairwise.complete.obs")
rcorr(as.matrix(track.a.short))
corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
library(psych)
install.packages()
install.packages("psych")
corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
library(psych)
corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
cor.results$r
as.dataframe(cor.results$r)
as.data.frame(cor.results$r)
install.packages("corrplot")
library(corrplot)
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
col <- colorRampPalette(c("darkorange", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col)
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
col <- colorRampPalette(c("green", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col)
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col)
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black")
?corr()
?corrplot()
?corrplot
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "bonferroni")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tel.cex = 1, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tel.cex = 0.5, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5, sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "black",
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "black", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "white", tl.cex = 0.5,
addCoef.col = "black", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.b.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.b.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
?corr.test()
cor.results <- corr.test(track.b.short, method = "spearman", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
head(track.b.short)
cor.results <- corr.test(track.b.short, method = "spearman", adjust = "holm")
?cor.test()
?cor()
cor.results <- corr.test(track.b.short, use = "complete.obs", method = "spearman", adjust = "holm")
View(track.b.short)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
# remove the parentheses in column names
colnames(gutierrez.results) <- sub("\\(", "", colnames(gutierrez.results))
colnames(gutierrez.results) <- sub("\\)", "", colnames(gutierrez.results))
# replace "+" by "."
colnames(gutierrez.results) <- gsub("\\+", ".", colnames(gutierrez.results))
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
#TRACK B (Universal Dependencies, UD)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
track.a.rows <- c(nrow(gutierrez.results), nrow(oh.results))
print(track.a.rows) # this corresponds to the number of languages
track.a.cols <- c(ncol(gutierrez.results), ncol(oh.results))
print(track.a.cols) # this is the number of measures per team
#Track B (should be 63 rows)
track.b.rows <- c(nrow(brunato.results), nrow(coltekin.results), nrow(semenuks.results), nrow(sinnemaki.results), nrow(sozinova.results))
print(track.b.rows) # this corresponds to the number of languages
track.b.cols <- c(ncol(brunato.results), ncol(coltekin.results), ncol(semenuks.results), ncol(sinnemaki.results), ncol(sozinova.results))
print(track.b.cols) # this is the number of measures per team
track.a <- cbind(gutierrez.results, oh.results[, 3:ncol(oh.results)])
track.b <- cbind(brunato.results, coltekin.results[, 3:ncol(coltekin.results)],
semenuks.results[, 3:ncol(semenuks.results)],
sinnemaki.results[, 3:ncol(sinnemaki.results)],
sozinova.results[, 3:ncol(sozinova.results)])
track.b <- track.b[ , -which(names(track.b) %in% c("SI_double_dl","SI_head_dl", "SI_zero_dl"))]
head(track.b)
track.b$SI_hm
track.b.short <- track.b[, 3:ncol(track.b)]
cor.results <- corr.test(track.b.short, use = "complete.obs", method = "spearman", adjust = "holm")
cor.results <- corr.test(track.b.short, use = "pairwise.complete.obs", method = "spearman", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.b.short, use = "pairwise.complete.obs", method = "spearman", adjust = "holm")
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
#upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2))) +
#upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
# define color range
#col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
# define color range
#col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
corrplot(cor.results$r, type = "upper", order = "hclust",
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust",
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman", use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
# remove the parentheses in column names
colnames(gutierrez.results) <- sub("\\(", "", colnames(gutierrez.results))
colnames(gutierrez.results) <- sub("\\)", "", colnames(gutierrez.results))
# replace "+" by "."
colnames(gutierrez.results) <- gsub("\\+", ".", colnames(gutierrez.results))
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
#TRACK B (Universal Dependencies, UD)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
track.a.rows <- c(nrow(gutierrez.results), nrow(oh.results))
print(track.a.rows) # this corresponds to the number of languages
track.a.cols <- c(ncol(gutierrez.results), ncol(oh.results))
print(track.a.cols) # this is the number of measures per team
#Track B (should be 63 rows)
track.b.rows <- c(nrow(brunato.results), nrow(coltekin.results), nrow(semenuks.results), nrow(sinnemaki.results), nrow(sozinova.results))
print(track.b.rows) # this corresponds to the number of languages
track.b.cols <- c(ncol(brunato.results), ncol(coltekin.results), ncol(semenuks.results), ncol(sinnemaki.results), ncol(sozinova.results))
print(track.b.cols) # this is the number of measures per team
track.a <- cbind(gutierrez.results, oh.results[, 3:ncol(oh.results)])
track.b <- cbind(brunato.results, coltekin.results[, 3:ncol(coltekin.results)],
semenuks.results[, 3:ncol(semenuks.results)],
sinnemaki.results[, 3:ncol(sinnemaki.results)],
sozinova.results[, 3:ncol(sozinova.results)])
track.b <- track.b[ , -which(names(track.b) %in% c("SI_double_dl", "SI_head_dl", "SI_zero_dl"))]
track.b$CR_inflection_accuracy <- 1-track.b$CR_inflection_accuracy
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2))) +
#upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
track.b.short <- track.b[, 3:ncol(track.b)]
track.b.plot <- ggpairs(track.b.short, progress = TRUE,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = list(continuous = wrap('cor', method = "spearman")),
columns = c("BV_n_tokens", "BV_char_per_tok", "BV_avg_links_len",
"BV_avg_max_depth", "CR_inflection_accuracy", "CR_ttr",
"S_idMean", "S_idSD", "SI_dm", "SI_hm", "SI_dep_dl",
"SBS_INF", "SBS_DER")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.b.plot)
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
cor.results <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
track.b.plot <- ggpairs(track.b.short, progress = TRUE,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = blank, #list(continuous = wrap('cor', method = "spearman")),
columns = c("BV_n_tokens", "BV_char_per_tok", "BV_avg_links_len",
"BV_avg_max_depth", "CR_inflection_accuracy", "CR_ttr",
"S_idMean", "S_idSD", "SI_dm", "SI_hm", "SI_dep_dl",
"SBS_INF", "SBS_DER")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
track.b.plot <- ggpairs(track.b.short, progress = TRUE,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3,
lwd = 0.5, size = 2)),
upper = "blank", #list(continuous = wrap('cor', method = "spearman")),
columns = c("BV_n_tokens", "BV_char_per_tok", "BV_avg_links_len",
"BV_avg_max_depth", "CR_inflection_accuracy", "CR_ttr",
"S_idMean", "S_idSD", "SI_dm", "SI_hm", "SI_dep_dl",
"SBS_INF", "SBS_DER")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.b.plot)
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# give correlation plot
track.a.correlogram <- corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
ggsave("~/Github/ComplexityMetaAnalyses/Figures/Corrs/TrackA/track_a_correlogram.pdf", track.a.correlogram,
dpi = 300, scale = 1, width = 15, height = 15, device = cairo_pdf)
pdf(file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/TrackA/track_a_correlogram.pdf")
track.a.correlogram
dev.off()
track.a.correlogram <- corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
track.a.correlogram
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5,
addCoef.col = "white", number.cex = 0.5,
sig.level = 0.05, insig = "blank")
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.a.plot1.detailed
track.b.plot1.detailed <- ggplot(track.b, aes(x = CR_msp, y = SBS_INF)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.b[track.b$language == "Chinese" | track.b$language == "Vietnamese" | track.b$language == "English" | track.b$language == "Russian" | track.b$language == "Old Church Slavonic" | track.b$language == "Basque" | track.b$language == "Finnish" | track.b$language == "Turkish" | track.b$language == "Latin" | track.b$language == "Uyghur" | track.b$language == "Ancient Greek", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.b.plot1.detailed
track.b.scatterplot.negative.detailed <- ggplot(track.b, aes(x = CR_mfe, y = SI_dep_dl)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.b[track.b$language == "Chinese" | track.b$language == "Vietnamese" | track.b$language == "German" | track.b$language == "English" | track.b$language == "Hungarian" | track.b$language == "Greek" | track.b$language == "Russian" | track.b$language == "Old Church Slavonic" | track.b$language == "Basque" | track.b$language == "Finnish" | track.b$language == "Turkish" | track.b$language == "Korean" | track.b$language == "Latin" | track.b$language == "Uyghur" | track.b$language == "Ancient Greek", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.b.scatterplot.negative.detailed
track.a.scatterplot.negative.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_SID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.b[track.b$language == "Chinese" | track.b$language == "Vietnamese" | track.b$language == "German" | track.b$language == "English" | track.b$language == "Hungarian" | track.b$language == "Greek" | track.b$language == "Russian" | track.b$language == "Old Church Slavonic" | track.b$language == "Basque" | track.b$language == "Finnish" | track.b$language == "Turkish" | track.b$language == "Korean" | track.b$language == "Latin" | track.b$language == "Uyghur" | track.b$language == "Ancient Greek", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.a.scatterplot.negative.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.negative.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_SID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
theme(legend.position = "none")
track.a.negative.detailed
