#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.b.df[track.b.df$row == "CR_inflection_accuracy" & track.b.df$col == "SBS_INF", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.b.plot1.negative.detailed
track.b.plot2.negative.detailed <- ggplot(track.b, aes(x = CR_mfe, y = SI_dep_dl)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.b[track.b$language == "Chinese" | track.b$language == "Vietnamese" | track.b$language == "German" | track.b$language == "English" | track.b$language == "Hungarian" | track.b$language == "Greek" | track.b$language == "Russian" | track.b$language == "Old Church Slavonic" | track.b$language == "Basque" | track.b$language == "Finnish" | track.b$language == "Turkish" | track.b$language == "Korean" | track.b$language == "Latin" | track.b$language == "Uyghur" | track.b$language == "Ancient Greek", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.b.df[track.b.df$row == "CR_mfe" & track.b.df$col == "SI_dep_dl", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.b.plot2.negative.detailed
install.packages(c("rcompanion", "readr", "tidyr"))
knitr::opts_chunk$set(echo = TRUE)
brunato.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"
brunato.results <- read_csv(brunato.url)
library(readr)
library(MASS)
library(tidyr)
library(ggplot2)
library(scales)
library(plyr)
library(rcompanion)
brunato.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"
brunato.results <- read_csv(brunato.url)
head(brunato.results)
brunato.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"
brunato.results <- read_csv(brunato.url)
coltekin.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv"
coltekin.results <- read_csv(coltekin.url)
semenuks.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv"
semenuks.results <- read_csv(semenuks.url)
sinnemaki.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv"
sinnemaki.results <- read_csv(sinnemaki.url)
sozinova.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv"
sozinova.results <- read_csv(sozinova.url)
results <- Reduce(merge, list(brunato.results, coltekin.results, semenuks.results, sinnemaki.results, sozinova.results))
head(results)
nrow(results) # i.e. number of different UD corpora
length(unique(results$language)) # i.e. number of different languages
unique(results$language) # output the language names
ncol(results)-2 # i.e. number of complexity measures
results$CR_inflection_accuracy <- 1-results$CR_inflection_accuracy
results.scaled <- cbind(results[1:2], scale(results[3:29])) # add meta-information columns again
results.long <- gather(results.scaled, key = measure, value = value, BV_n_tokens:SBS_DER)
mu <- ddply(results.long, "id", summarise, grp.mean = mean(value, na.rm = T)) # get mean values for each language
med <- ddply(results.long, "id", summarise, grp.median = median(value, na.rm = T)) # get median values for each language
sdev <- ddply(results.long, "id", summarise, grp.sd = sd(value, na.rm = T)) # get standard deviation values for each language
density.plot <- ggplot(results.long, aes(x = value)) +
#geom_histogram(aes(y = ..density..), colour = "black", fill = "light grey",
#binwidth = 0.1) +
geom_density(alpha = .2, fill = "grey", color = "darkgrey") +
geom_jitter(data = results.long, aes(x = value, y = 0),
size = 1, height = 0.1, width = 0) +
facet_wrap(~ id) +
# geom_vline(data = mu, aes(xintercept=grp.mean),
#           linetype = "dotted") +
geom_vline(data = med, aes(xintercept = grp.median),
linetype = "dashed", color = "red") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(x = "Complexity Value", y = "Density") +
xlim(-3, 3) +
theme_bw()
print(density.plot)
density.plot <- ggplot(results.long, aes(x = value)) +
#geom_histogram(aes(y = ..density..), colour = "black", fill = "light grey",
#binwidth = 0.1) +
geom_density(alpha = .2, fill = "grey", color = "darkgrey") +
geom_jitter(data = results.long, aes(x = value, y = 0),
size = 1, height = 0.1, width = 0) +
facet_wrap(~ language) +
# geom_vline(data = mu, aes(xintercept=grp.mean),
#           linetype = "dotted") +
geom_vline(data = med, aes(xintercept = grp.median),
linetype = "dashed", color = "red") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(x = "Complexity Value", y = "Density") +
xlim(-3, 3) +
theme_bw()
print(density.plot)
mu <- ddply(results.long, "language", summarise, grp.mean = mean(value, na.rm = T)) # get mean values for each language
med <- ddply(results.long, "language", summarise, grp.median = median(value, na.rm = T)) # get median values for each language
sdev <- ddply(results.long, "language", summarise, grp.sd = sd(value, na.rm = T)) # get standard deviation values for each language
density.plot <- ggplot(results.long, aes(x = value)) +
#geom_histogram(aes(y = ..density..), colour = "black", fill = "light grey",
#binwidth = 0.1) +
geom_density(alpha = .2, fill = "grey", color = "darkgrey") +
geom_jitter(data = results.long, aes(x = value, y = 0),
size = 1, height = 0.1, width = 0) +
facet_wrap(~ language) +
# geom_vline(data = mu, aes(xintercept=grp.mean),
#           linetype = "dotted") +
geom_vline(data = med, aes(xintercept = grp.median),
linetype = "dashed", color = "red") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(x = "Complexity Value", y = "Density") +
xlim(-3, 3) +
theme_bw()
print(density.plot)
stats.df <- cbind(mu, med[, 2], sdev[, 2])
colnames(stats.df) <- c("language", "mu", "med", "sdev")
stats.df.sorted <- stats.df[order(-stats.df$med),]
print(stats.df.sorted)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
gutierrez <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
head(gutierrez)
oh <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
gutierrez.url <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv"
gutierrez <- read_csv(gutierrez.url)
knitr::opts_chunk$set(echo = TRUE)
brunato.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"
brunato.results <- read_csv(brunato.url)
coltekin.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv"
coltekin.results <- read_csv(coltekin.url)
library(readr)
brunato.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"
brunato.results <- read_csv(brunato.url)
library(readr)
brunato.url  <- "https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"
brunato.results <- read_csv(brunato.url)
brunato.url  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
head(brunato.url)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
install.packages("curl")
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
oh <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
track.a.rows <- c(nrow(gutierrez), nrow(oh))
print(track.a.rows) # this corresponds to the number of languages
track.a.cols <- c(ncol(gutierrez), ncol(oh))
print(track.a.cols) # this is the number of measures per team
#Track B (should be 63 rows)
track.b.rows <- c(nrow(brunato), nrow(coltekin), nrow(semenuks), nrow(sinnemaki), nrow(sozinova))
print(track.b.rows) # this corresponds to the number of languages
track.b.cols <- c(ncol(brunato), ncol(coltekin), ncol(semenuks), ncol(sinnemaki), ncol(sozinova))
print(track.b.cols) # this is the number of measures per team
track.a <- cbind(gutierrez, oh[, 3:ncol(oh)])
track.b <- cbind(brunato, coltekin[, 3:ncol(coltekin)], semenuks[, 3:ncol(semenuks)], sinnemaki[, 3:ncol(sinnemaki)], sozinova[, 3:ncol(sozinova)])
head(track.a)
head(track.b)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
View(gutierrez.results)
library(readr)
library(ggplot2)
library(gridExtra)
library(GGally)
library(Hmisc)
library(ggrepel)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
#TRACK B (Universal Dependencies, UD)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
track.a.rows <- c(nrow(gutierrez.results), nrow(oh.results))
print(track.a.rows) # this corresponds to the number of languages
track.a.cols <- c(ncol(gutierrez.results), ncol(oh.results))
print(track.a.cols) # this is the number of measures per team
#Track B (should be 63 rows)
track.b.rows <- c(nrow(brunato.results), nrow(coltekin.results), nrow(semenuks.results), nrow(sinnemaki.results), nrow(sozinova.results))
print(track.b.rows) # this corresponds to the number of languages
track.b.cols <- c(ncol(brunato.results), ncol(coltekin.results), ncol(semenuks.results), ncol(sinnemaki.results), ncol(sozinova.results))
print(track.b.cols) # this is the number of measures per team
track.a <- cbind(gutierrez.results, oh.results[, 3:ncol(oh.results)])
track.b <- cbind(brunato.results, coltekin.results[, 3:ncol(coltekin.results)], semenuks.results[, 3:ncol(semenuks.results)], sinnemaki.results[, 3:ncol(sinnemaki.results)], sozinova.results[, 3:ncol(sozinova.results)])
head(track.a)
head(track.b)
track.a.short <- track.a[, 3:ncol(track.a)]
track.a.plot <- ggpairs(track.a.short,
lower = list(continuous = wrap("smooth_loess", alpha = 0.3, lwd = 0.5, size = 2)),
upper = list(continuous = wrap('cor', method = "spearman"))) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(track.a.plot)
track.a.matrix <- as.matrix(track.a.short)
#apply the rcorr function to this matrix to get matrices of Spearman correlations and uncorrected p-values
track.a.cor <- rcorr(track.a.matrix, type = "spearman")$r
track.a.pvalues <- rcorr(track.a.matrix, type = "spearman")$P
track.a.n <- rcorr(track.a.matrix, type = "spearman")$n
#convert these matrices to a data frame again
track.a.df <- data.frame(row = rownames(track.a.pvalues)[row(track.a.pvalues)[upper.tri(track.a.pvalues)]],
col = colnames(track.a.pvalues)[col(track.a.pvalues)[upper.tri(track.a.pvalues)]],
pvalue = track.a.pvalues[upper.tri(track.a.pvalues)],
corr = track.a.cor[upper.tri(track.a.cor)],
num = track.a.n[upper.tri(track.a.n)])
head(track.a.df)
track.b.matrix <- as.matrix(track.b.short)
track.b.cor <- rcorr(track.b.matrix, type = "spearman")$r
track.b.pvalues <- rcorr(track.b.matrix, type = "spearman")$P
track.b.n <- rcorr(track.b.matrix, type = "spearman")$n
track.b.df <- data.frame(row = rownames(track.b.pvalues)[row(track.b.pvalues)[upper.tri(track.b.pvalues)]],
col = colnames(track.b.pvalues)[col(track.b.pvalues)[upper.tri(track.b.pvalues)]],
pvalue = track.b.pvalues[upper.tri(track.b.pvalues)],
corr = track.b.cor[upper.tri(track.b.cor)],
num = track.b.n[upper.tri(track.b.n)])
n.test <- ncol(track.a.short)*(ncol(track.a.short) - 1) + ncol(track.b.short)*(ncol(track.b.short) - 1)
# add corrected pvalues to data frames
track.a.df$pvalue.correct <- track.a.df$pvalue*n.test
track.b.df$pvalue.correct <- track.b.df$pvalue*n.test
track.a.df <- track.a.df[track.a.df$pvalue.correct < 0.05, ]
track.a.df <- track.a.df[order(-track.a.df$corr), ]
# Track B
track.b.df <- track.b.df[track.b.df$pvalue.correct < 0.05, ]
track.b.df <- track.b.df[order(-track.b.df$corr), ]
print(track.a.df)
track.a.plot1 <- ggplot(track.a.short, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot2 <- ggplot(track.a.short, aes(x = GM_TTR, y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR" & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot3 <- ggplot(track.a.short, aes(x = GM_TTR.H1_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR.H1_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot4 <- ggplot(track.a.short, aes(x = GM_TTR.H1, y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR.H1" & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.b.plot1 <- ggplot(track.b.short, aes(x = CR_msp, y = SBS_INF)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.b.df[track.b.df$row == "CR_msp" & track.b.df$col == "SBS_INF", ]$corr, 2),
sep = ""))
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_fullyparallelised" & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
View(gutierrez.results)
View(gutierrez)
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_(fullyparallelised), y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1 <- ggplot(track.a.short, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
#TRACK B (Universal Dependencies, UD)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
View(gutierrez.results)
track.a.plot1 <- ggplot(track.a.short, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot3 <- ggplot(track.a.short, aes(x = GM_TTR.H1_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR.H1_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
head(track.a)
head(track.a.short)
track.a.plot1 <- ggplot(track.a.short, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot1 <- ggplot(track.a.short, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
head(track.a)
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_(fullyparallelised), y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
track.a.plot1.detailed <- ggplot(track.a, aes(x = GM_TTR_fullyparallelised, y = O_WID)) +
geom_point(alpha = 0.3) +
geom_smooth(method = loess, alpha = 0.3) +
geom_label_repel(data = track.a[track.a$language == "Fijian" | track.a$language == "Sango" | track.a$language == "Vietnamese" | track.a$language == "Vietnamese" | track.a$language == "English" | track.a$language == "Georgian" |  track.a$language == "Russian" | track.a$language == "Swahili" | track.a$language == "Basque" | track.a$language == "Finnish" | track.a$language == "Turkish" | track.a$language == "Korean" | track.a$language == "Kalaallisut" | track.a$language == "Burmese", ],
min.segment.length = 0,
#nudge_x = 0.1,
aes(label = language),
size = 3) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = "")) +
theme(legend.position = "none")
track.a.plot1.detailed
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
#TRACK B (Universal Dependencies, UD)
brunato.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
coltekin.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Coltekin_rama/coltekin.csv")
semenuks.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Semenuks/Semenuks.csv")
sinnemaki.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sinnemaki/Sinnemaki.csv")
sozinova.results  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Sozinova_etal/sozinova_etal.csv")
View(track.a)
track.a.plot1 <- ggplot(track.a.short, aes(x = GM_TTR_.fullyparallelised., y = O_WID)) +
geom_point() +
geom_smooth(method = loess) +
labs(title = paste("r = ",
round(track.a.df[track.a.df$row == "GM_TTR_.fullyparallelised." & track.a.df$col == "O_WID", ]$corr, 2),
sep = ""))
track.a.plot1
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results)[col] <-  sub("_3.*", "", colnames(gutierrez.results)[col])
colnames(gutierrez.results)
colnames(gutierrez.results) <-  sub("_3.*", "", colnames(gutierrez.results))
head(gutierrez.results)
colnames(gutierrez.results) <-  sub("(", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("\(", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("(", "", colnames(gutierrez.results))
colnames(gutierrez.results)
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results))
colnames(gutierrez.results)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub(c("\\(","\\)"), "", colnames(gutierrez.results))
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results)) # remove the parentheses in column names
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("+", "", colnames(gutierrez.results)) # replace "+" by "."
colnames(gutierrez.results)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results)) # remove the parentheses in column names
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("\\+", ".", colnames(gutierrez.results)) # replace "+" by "."
colnames(gutierrez.results)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results)) # remove the parentheses in column names
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("\+", ".", colnames(gutierrez.results)) # replace "+" by "."
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results)) # remove the parentheses in column names
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  sub("\\+", ".", colnames(gutierrez.results)) # replace "+" by "."
colnames(gutierrez.results)
colnames(gutierrez.results) <-  sub("\\+", ".", colnames(gutierrez.results)) # replace "+" by "."
colnames(gutierrez.results)
?gsub
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results)) # remove the parentheses in column names
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  gsub("\\+", ".", colnames(gutierrez.results)) # replace "+" by "."
colnames(gutierrez.results)
gutierrez.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Gutierrez/Gutierrez.csv")
colnames(gutierrez.results) <-  sub("\\(", "", colnames(gutierrez.results)) # remove the parentheses in column names
colnames(gutierrez.results) <-  sub("\\)", "", colnames(gutierrez.results))
colnames(gutierrez.results) <-  gsub("\\+", ".", colnames(gutierrez.results)) # replace "+" by "."
colnames(gutierrez.results)
