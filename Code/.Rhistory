diag = F)
#dev.off()
saveas(gcf, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA")
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1000, width = 1000, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
tl.cex = 0.9, tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
number.cex = 0.9,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 500, width = 500, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
tl.cex = 0.9, tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
number.cex = 0.9,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 500, width = 500, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
tl.cex = 0.9, tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
number.cex = 0.9,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1000, width = 1000, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
tl.cex = 0.9, tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
number.cex = 0.9,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1000, width = 1000, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
tl.cex = 1.2, tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
number.cex = 1.2,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1000, width = 1000, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
tl.cex = 1.5, tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
number.cex = 1.5,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1000, width = 1000, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
#tl.cex = 1.5,
tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
#number.cex = 1.5,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 800, width = 800, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
#tl.cex = 1.5,
tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
#number.cex = 1.5,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1800, width = 1800, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
#tl.cex = 1.5,
tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
#number.cex = 1.5,
diag = F)
dev.off()
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 800, width = 800, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper",
order = "hclust", col = col,
tl.col = "black", addCoef.col = "black",
#tl.cex = 1.5,
tl.srt = 45,
p.mat = cor.results$p,
sig.level = 0.05,
insig = "blank",
#number.cex = 1.5,
diag = F)
dev.off()
cor.results <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 800, width = 800, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackB", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.cex = 0.5, tl.srt = 45,
addCoef.col = "black", number.cex = 0.5,
p.mat = cor.results$p,
pch.cex = 2,
#pch.col = "gray",
sig.level = 0.05, insig = "blank",
diag = F)
dev.off()
cor.results <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 800, width = 800, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackB", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.srt = 45,
addCoef.col = "black",
p.mat = cor.results$p,
pch.cex = 2,
#pch.col = "gray",
sig.level = 0.05, insig = "blank",
diag = F)
dev.off()
cor.results <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1000, width = 1000, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackB", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.srt = 45,
addCoef.col = "black",
p.mat = cor.results$p,
pch.cex = 2,
#pch.col = "gray",
sig.level = 0.05, insig = "blank",
diag = F)
dev.off()
cor.results <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
# safe to file (this is different from ggsave)
png(height = 1200, width = 1200, file = "~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackB", type = "cairo")
# give correlation plot
corrplot(cor.results$r, type = "upper", order = "hclust", col = col,
tl.col = "black", tl.srt = 45,
addCoef.col = "black",
p.mat = cor.results$p,
pch.cex = 2,
#pch.col = "gray",
sig.level = 0.05, insig = "blank",
diag = F)
dev.off()
install.packages("ggcorplot")
install.packages("ggcorrplot")
library(ggcorrplot)
cor.results <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# define color range
col <- colorRampPalette(c("darkred", "white", "steelblue"))(20)
ggcorrplot(cor.results$r, p.mat = cor.results$p, hc.order = TRUE,
type = "lower", insig = "blank")
ggcorrplot(cor.results$r)
ggcorrplot(corr, hc.order = TRUE, outline.col = "white")
ggcorrplot(cor.results$r, hc.order = TRUE, outline.col = "white")
ggcorrplot(cor.results$r, hc.order = TRUE, outline.col = "white", col = col)
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = col)
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = colorRampPalette(c("darkred", "white", "steelblue"))(20))
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = colorRampPalette(c("darkred", "white", "steelblue")))
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#6D9EC1"))
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#6D9EC1"),
lab = T)
ggcorrplot(cor.results$r, hc.order = TRUE, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#6D9EC1"),
lab = T, insig = "blank")
ggcorrplot(cor.results$r, hc.order = TRUE, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#6D9EC1"),
lab = T, insig = "blank")
ggcorrplot(cor.results$r, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#6D9EC1"),
lab = T, insig = "blank")
ggcorrplot(cor.results$r, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#6D9EC1"),
lab = T, insig = "pch")
ggcorrplot(cor.results$r, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#E46726", "white", "#AE3C3C"),
lab = T, insig = "pch")
ggcorrplot(cor.results$r, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackA <- ggcorrplot(cor.results$r, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackA <- ggcorrplot(cor.results$r, p.mat = cor.results$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackA
ggsave("~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackA.pdf", correlogram.TrackA,
dpi = 300, scale = 1, width = 7, height = 7, device = cairo_pdf)
cor.results.a <- corr.test(track.a.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# produce correlogram
correlogram.TrackA <- ggcorrplot(cor.results.a$r, p.mat = cor.results.a$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackA
cor.results.b <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# produce correlogram
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackB
cor.results.b <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# produce correlogram
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackB
cor.results.b <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# produce correlogram
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackB
ggsave("~/Github/ComplexityMetaAnalyses/Figures/Corrs/correlogram_TrackB.pdf", correlogram.TrackB,
dpi = 300, scale = 1, width = 12, height = 12, device = cairo_pdf)
cor.results.b <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# produce correlogram
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "blank")
correlogram.TrackB
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackB
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, hc.order = TRUE, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackB
correlogram.TrackA <- ggcorrplot(cor.results.a$r, p.mat = cor.results.a$p, hc.order = TRUE, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackA
cor.results.a$p
round(cor.results.a$p, 2)
correlogram.TrackA <- ggcorrplot(cor.results.a$r, p.mat = cor.results.a$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackA
cor.results.b <- corr.test(track.b.short, method = "spearman",
use = "pairwise.complete.obs", adjust = "holm")
# produce correlogram
correlogram.TrackB <- ggcorrplot(cor.results.b$r, p.mat = cor.results.b$p, type = "lower",
outline.col = "white", colors = c("#AE3C3C", "white", "#3C77AE"),
lab = T, insig = "pch")
correlogram.TrackB
glotto=read.csv("/home/chris/Data/Glottolog/Glottolog2.7_06_10_2016/glottolog2.7_webFormat_noNA.csv")
glotto=read.csv("~/chris/Data/Glottolog/Glottolog2.7_06_10_2016/glottolog2.7_webFormat_noNA.csv")
install.packages(ggmap)
install.packages("ggmap")
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
library(maps)
library(readr)
glotto <- read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_and_dialects_geo.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggmap)
library(maps)
installed.packages()[names(sessionInfo()$otherPkgs), "Version"]
glotto <- read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_and_dialects_geo.csv")
glotto <- read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/languages_and_dialects_geo.csv")
glotto <- read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_and_dialects_geo.csv?token=ADXEIAUZEAH6UMRZBUFPJ73ADJLBO")
head(glotto)
glotto <- read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_and_dialects_geo.csv?token=ADXEIAUZEAH6UMRZBUFPJ73ADJLBO")
# Track A
oh.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/PBCtrack/Oh/oh.csv")
# Track B
brunato.results <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv")
oh.results[1,]
oh.results[, 1]
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
sample.track.a
View(sample.track.a)
View(sample.track.b)
gsub('\_*', '', sample.track.b)
gsub('_*', '', sample.track.b)
gsub('_.*', '', sample.track.b)
library(stringr)
str_remove_all(sample.track.b, "_.*")
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
str_remove_all(sample.track.b, "_.*")
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- str_remove_all(sample.track.b, "_.*")
sample.track.b <- brunato.results[, 1]
as.vector(sample.track.b)
sample.track.b <- str_remove_all(as.vector(sample.track.b), "_.*")
sample.track.b <- str_remove(sample.track.b, "_.*")
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- str_remove(sample.track.b, "_.*")
sample.track.b
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
str_remove(sample.track.b, "_.*")
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- str_remove(sample.track.b, "\_.*")
# extract language samples
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- str_remove(sample.track.b, "_")
sample.track.b
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- str_remove_all(sample.track.b, "_")
sample.track.b
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- str_remove_all(sample.track.b, "_.*")
sample.track.b
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
# remove corpus specification in id
sample.track.b <- gsub(pattern = "_.*", sample.track.b)
sample.track.b <- gsub(pattern = "_.*", "", sample.track.b)
sample.track.b
sample.track.b <- as.vector(brunato.results[, 1])
# remove corpus specification in id
sample.track.b <- gsub(pattern = "_.*", "", sample.track.b)
sample.track.b
sample.track.a <- oh.results[, 1]
sample.track.b <- brunato.results[, 1]
typeof(sample.track.b)
sample.track.b[3]
sample.track.b[,3]
sample.track.b[3,]
brunato.results <- as.data.frame(read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/UDtrack/Brunato_venturi/Brunato-Venturi.csv"))
head(brunato.results)
glotto <- as.data.frame(read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_and_dialects_geo.csv?token=ADXEIAUZEAH6UMRZBUFPJ73ADJLBO"))
glotto <- as.data.frame(read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_and_dialects_geo.csv?token=ADXEIAUZEAH6UMRZBUFPJ73ADJLBO"))
head(glotto)
file.choose()
samples <- read.csv("/home/chris/Desktop/language_samples.csv")
head(samples)
file.choose()
glotto <- read.csv("/media/chris/Elements SE/Chris-ESPRIMO-P920-WordsAndBones/Data/Glottolog/Glottolog4.1/languages_and_dialects_geo.csv")
head(glotto)
samples.glotto <- merge(glotto, samples, by.x ="isocodes", by.y ="iso")
samples.glotto
nrow(ssamples
nrow(samples)
nrow(samples.glotto)
samples$iso
unique(sample$iso)
unique(samples$iso)
unique(samples.glotto$isocodes)
set.diff(samples$iso, samples.glotto)
setdiff(samples$iso, samples.glotto)
setdiff(samples$iso, samples.glotto$isocodes)
glotto <- read.csv("/media/chris/Elements SE/Chris-ESPRIMO-P920-WordsAndBones/Data/Glottolog/Glottolog4.1/languages_and_dialects_geo.csv")
samples <- read.csv("/home/chris/Desktop/language_samples.csv")
samples.glotto <- merge(glotto, samples, by.x ="isocodes", by.y ="iso")
samples.glotto
write.csv(samples.glotto, file="/home/chris/Desktop/samples_metainfo.csv")
languages <- read_csv("https://raw.githubusercontent.com/christianbentz/ComplexityMetaAnalyses/main/languages_metaInfo.csv")
knitr::opts_chunk$set(echo = TRUE)
meta.info  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/measures_metaInfo.csv")
meta.info  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/measures_metaInfo.csv")
meta.info  <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/measures_metaInfo.csv")
languages <- read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/languages_metaInfo.csv")
languages
languages <- as.data.frame(read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/languages_metaInfo.csv"))
head(languages)
unique(languages$isocodes)
unique(languages$glottocodes)
length(unique(languages$isocodes))
length(unique(languages$glottocode))
unique(languages$macroarea)
View(languages)
languages <- as.data.frame(read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/languages_metaInfo.csv"))
languages <- languages[languages$isocodes != "nno",]
length(unique(languages$isocodes)) # number of languages according to iso: 79
length(unique(languages$glottocode)) # number of languages according to glottolog: 79
unique(languages$macroarea) # macroareas: 6
languages <- as.data.frame(read_csv("https://raw.githubusercontent.com/IWMLC/language-complexity-metrics/master/languages_metaInfo.csv"))
length(unique(languages$isocodes)) # number of languages according to iso: 79
length(unique(languages$glottocode)) # number of languages according to glottolog: 79
unique(languages$macroarea) # macroareas: 6
View(languages)
languages <- languages[languages$isocodes != "nno",]
View(languages)
library(readr)
library(ggmap)
library(maps)
world <- map_data("world")
head(world)
